name: ZenML Pipeline Execution

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-zenml-pipeline:
    runs-on: ubuntu-latest

    services:
      cassandra:
        image: cassandra:latest
        ports:
          - 9042:9042
        options: --health-cmd "cqlsh -e 'DESCRIBE KEYSPACES'" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run ZenML Pipeline
        run: |
          python -m zenml up
          python pipeline.ipynb
        env:
          CASSANDRA_CLUSTER: "localhost"

      - name: Shutdown ZenML services
        if: always()
        run: python -m zenml down

      - name: Test Model
        run: python test_model.py
        env:
          MLFLOW_TRACKING_URI: http://localhost:5000

      - name: Validate Metrics
        run: |
          # Fetch metrics from MLflow
          f1_score=$(curl -s http://localhost:5000/api/2.0/preview/mlflow/metrics/get?run_id=${{ env.MLFLOW_RUN_ID }}&metric_key=f1_score)
          accuracy=$(curl -s http://localhost:5000/api/2.0/preview/mlflow/metrics/get?run_id=${{ env.MLFLOW_RUN_ID }}&metric_key=accuracy)

          # Check if F1 score and accuracy meet business requirements
          if [ $(echo "$f1_score > 0.80" | bc) -ne 1 ] || [ $(echo "$accuracy > 0.80" | bc) -ne 1 ]; then
            echo "Model metrics do not meet the required thresholds."
            exit 1
          fi

      - name: Log Metrics to MLflow
        run: |
          pip install mlflow
          mlflow server --backend-store-uri sqlite:///mlflow.db --default-artifact-root ./mlruns --host localhost
        env:
          MLFLOW_TRACKING_URI: http://localhost:5000
